// <auto-generated />
using System;
using Labb_2___Applikation_med_EntityFramework_DB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_2___Applikation_med_EntityFramework_DB.Migrations
{
    [DbContext(typeof(Labb1SqldatabasBokhandelContext))]
    partial class Labb1SqldatabasBokhandelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Butiker", b =>
                {
                    b.Property<int>("ButikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButikId"));

                    b.Property<string>("ButiksNamn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GatuAdress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ButikId")
                        .HasName("PK__Butiker__B5D66BFA4AD75A08");

                    b.ToTable("Butiker", (string)null);
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Böcker", b =>
                {
                    b.Property<string>("Isbn13")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ISBN13");

                    b.Property<int?>("FörfattarId")
                        .HasColumnType("int")
                        .HasColumnName("författarId");

                    b.Property<int?>("FörlagId")
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    b.Property<int>("Pris")
                        .HasColumnType("int");

                    b.Property<string>("Språk")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Titel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("Utgivningsdatum")
                        .HasColumnType("date");

                    b.HasKey("Isbn13")
                        .HasName("PK__Böcker__3BF79E038302C4E0");

                    b.HasIndex("FörfattarId");

                    b.HasIndex("FörlagId");

                    b.ToTable("Böcker", (string)null);
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Författare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Födelseår")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Författa__3214EC273ADB3487");

                    b.ToTable("Författare", (string)null);
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Förlag", b =>
                {
                    b.Property<int>("FörlagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FörlagID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FörlagId"));

                    b.Property<string>("Förlagsnamn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Land")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FörlagId")
                        .HasName("PK__Förlag__DE6A852C85BC6114");

                    b.HasIndex(new[] { "Förlagsnamn" }, "UQ__Förlag__664754B594217C30")
                        .IsUnique();

                    b.ToTable("Förlag", (string)null);
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Kunder", b =>
                {
                    b.Property<int>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KundID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KundId"));

                    b.Property<string>("Adress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Postnummer")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Stad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KundId")
                        .HasName("PK__Kunder__F2B5DEACB4928BCE");

                    b.HasIndex(new[] { "Epost" }, "UQ__Kunder__0CCE4D171D477DD2")
                        .IsUnique();

                    b.ToTable("Kunder", (string)null);
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.LagerSaldo", b =>
                {
                    b.Property<int>("ButikId")
                        .HasColumnType("int")
                        .HasColumnName("ButikID");

                    b.Property<string>("Isbn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ISBN");

                    b.Property<int>("Antal")
                        .HasColumnType("int");

                    b.HasKey("ButikId", "Isbn");

                    b.HasIndex("Isbn");

                    b.ToTable("LagerSaldo", (string)null);
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Böcker", b =>
                {
                    b.HasOne("Labb_2___Applikation_med_EntityFramework_DB.Models.Författare", "Författar")
                        .WithMany("Böckers")
                        .HasForeignKey("FörfattarId")
                        .HasConstraintName("FK__Böcker__författa__398D8EEE");

                    b.HasOne("Labb_2___Applikation_med_EntityFramework_DB.Models.Förlag", "Förlag")
                        .WithMany("Böckers")
                        .HasForeignKey("FörlagId")
                        .HasConstraintName("FK__Böcker__FörlagID__534D60F1");

                    b.Navigation("Författar");

                    b.Navigation("Förlag");
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.LagerSaldo", b =>
                {
                    b.HasOne("Labb_2___Applikation_med_EntityFramework_DB.Models.Butiker", "Butik")
                        .WithMany("LagerSaldos")
                        .HasForeignKey("ButikId")
                        .IsRequired()
                        .HasConstraintName("FK__LagerSald__Butik__49C3F6B7");

                    b.HasOne("Labb_2___Applikation_med_EntityFramework_DB.Models.Böcker", "IsbnNavigation")
                        .WithMany("LagerSaldos")
                        .HasForeignKey("Isbn")
                        .IsRequired()
                        .HasConstraintName("FK__LagerSaldo__ISBN__4AB81AF0");

                    b.Navigation("Butik");

                    b.Navigation("IsbnNavigation");
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Butiker", b =>
                {
                    b.Navigation("LagerSaldos");
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Böcker", b =>
                {
                    b.Navigation("LagerSaldos");
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Författare", b =>
                {
                    b.Navigation("Böckers");
                });

            modelBuilder.Entity("Labb_2___Applikation_med_EntityFramework_DB.Models.Förlag", b =>
                {
                    b.Navigation("Böckers");
                });
#pragma warning restore 612, 618
        }
    }
}
